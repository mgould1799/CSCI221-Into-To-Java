#BlueJ class context
comment0.params=name\ year\ employees
comment0.target=Company(java.lang.String,\ int,\ int)
comment0.text=\n\ Overloaded\ Constructor\ 3-parameters\n
comment1.params=name\ year\ employees\ parent
comment1.target=Company(java.lang.String,\ int,\ int,\ Company)
comment1.text=\n\ Overloaded\ Constructor\ 4-parameters\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\n\ Retrieves\ name\ of\ the\ company\n
comment3.params=
comment3.target=Company\ getParent()
comment3.text=\n\ Retrieves\ the\ parent\ company\n
comment4.params=
comment4.target=java.lang.String\ toString()
comment4.text=\n\ Returns\ a\ String\ representation\ for\ the\ current\ company\n
comment5.params=c
comment5.target=boolean\ equals(Company)
comment5.text=\n\ Returns\ true\ if\ the\ objects\ being\ compared\ contain\ identical\ data\n
comment6.params=c
comment6.target=boolean\ isBigger(Company)
comment6.text=\n\ Determi\ \ nes\ if\ this\ company\ has\ more\ employees\ than\ another\ company\n\ Pre-Conditions\:\ none,\ so\ ensure\ that\ c\ not\ null\n
comment7.params=c1\ c2
comment7.target=boolean\ isBigger(Company,\ Company)
comment7.text=\n\ Static\ method\ to\ compare\ any\ two\ companies\ based\ on\ numbers\ of\ employees,\n\ \ \ returns\ true\ if\ c1\ has\ more\ employees\ than\ c2.\ \n\ Preconditions\:\ none,\ so\ veriy\ that\ c1\ and\ c2\ are\ not\ null\n
comment8.params=
comment8.target=Company\ copy()
comment8.text=\n\ copy\ method\ -\ returns\ a\ Company\ object\ that\ is\ a\ copy\ of\ the\ current\ object,\ but\ not\ an\ alias\n
comment9.params=args
comment9.target=void\ main(java.lang.String[])
numComments=10
